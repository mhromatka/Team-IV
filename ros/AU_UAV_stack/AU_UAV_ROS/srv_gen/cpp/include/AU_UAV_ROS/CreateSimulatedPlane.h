/* Auto-generated by genmsg_cpp for file /home/mj/Documents/Team-IV/ros/AU_UAV_stack/AU_UAV_ROS/srv/CreateSimulatedPlane.srv */
#ifndef AU_UAV_ROS_SERVICE_CREATESIMULATEDPLANE_H
#define AU_UAV_ROS_SERVICE_CREATESIMULATEDPLANE_H
#include <string>
#include <vector>
#include <map>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/time.h"

#include "ros/macros.h"

#include "ros/assert.h"

#include "ros/service_traits.h"




namespace AU_UAV_ROS
{
template <class ContainerAllocator>
struct CreateSimulatedPlaneRequest_ {
  typedef CreateSimulatedPlaneRequest_<ContainerAllocator> Type;

  CreateSimulatedPlaneRequest_()
  : startingLatitude(0.0)
  , startingLongitude(0.0)
  , startingAltitude(0.0)
  , startingBearing(0)
  , requestedID(0)
  {
  }

  CreateSimulatedPlaneRequest_(const ContainerAllocator& _alloc)
  : startingLatitude(0.0)
  , startingLongitude(0.0)
  , startingAltitude(0.0)
  , startingBearing(0)
  , requestedID(0)
  {
  }

  typedef double _startingLatitude_type;
  double startingLatitude;

  typedef double _startingLongitude_type;
  double startingLongitude;

  typedef double _startingAltitude_type;
  double startingAltitude;

  typedef int64_t _startingBearing_type;
  int64_t startingBearing;

  typedef int16_t _requestedID_type;
  int16_t requestedID;


  typedef boost::shared_ptr< ::AU_UAV_ROS::CreateSimulatedPlaneRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::AU_UAV_ROS::CreateSimulatedPlaneRequest_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct CreateSimulatedPlaneRequest
typedef  ::AU_UAV_ROS::CreateSimulatedPlaneRequest_<std::allocator<void> > CreateSimulatedPlaneRequest;

typedef boost::shared_ptr< ::AU_UAV_ROS::CreateSimulatedPlaneRequest> CreateSimulatedPlaneRequestPtr;
typedef boost::shared_ptr< ::AU_UAV_ROS::CreateSimulatedPlaneRequest const> CreateSimulatedPlaneRequestConstPtr;


template <class ContainerAllocator>
struct CreateSimulatedPlaneResponse_ {
  typedef CreateSimulatedPlaneResponse_<ContainerAllocator> Type;

  CreateSimulatedPlaneResponse_()
  : planeID(0)
  {
  }

  CreateSimulatedPlaneResponse_(const ContainerAllocator& _alloc)
  : planeID(0)
  {
  }

  typedef int16_t _planeID_type;
  int16_t planeID;


  typedef boost::shared_ptr< ::AU_UAV_ROS::CreateSimulatedPlaneResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::AU_UAV_ROS::CreateSimulatedPlaneResponse_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct CreateSimulatedPlaneResponse
typedef  ::AU_UAV_ROS::CreateSimulatedPlaneResponse_<std::allocator<void> > CreateSimulatedPlaneResponse;

typedef boost::shared_ptr< ::AU_UAV_ROS::CreateSimulatedPlaneResponse> CreateSimulatedPlaneResponsePtr;
typedef boost::shared_ptr< ::AU_UAV_ROS::CreateSimulatedPlaneResponse const> CreateSimulatedPlaneResponseConstPtr;

struct CreateSimulatedPlane
{

typedef CreateSimulatedPlaneRequest Request;
typedef CreateSimulatedPlaneResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;
}; // struct CreateSimulatedPlane
} // namespace AU_UAV_ROS

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::AU_UAV_ROS::CreateSimulatedPlaneRequest_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::AU_UAV_ROS::CreateSimulatedPlaneRequest_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::AU_UAV_ROS::CreateSimulatedPlaneRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "f5e11354850d0839e676d35e9e3ae44c";
  }

  static const char* value(const  ::AU_UAV_ROS::CreateSimulatedPlaneRequest_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0xf5e11354850d0839ULL;
  static const uint64_t static_value2 = 0xe676d35e9e3ae44cULL;
};

template<class ContainerAllocator>
struct DataType< ::AU_UAV_ROS::CreateSimulatedPlaneRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "AU_UAV_ROS/CreateSimulatedPlaneRequest";
  }

  static const char* value(const  ::AU_UAV_ROS::CreateSimulatedPlaneRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::AU_UAV_ROS::CreateSimulatedPlaneRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "float64 startingLatitude\n\
float64 startingLongitude\n\
float64 startingAltitude\n\
int64 startingBearing\n\
int16 requestedID\n\
\n\
";
  }

  static const char* value(const  ::AU_UAV_ROS::CreateSimulatedPlaneRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::AU_UAV_ROS::CreateSimulatedPlaneRequest_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros


namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::AU_UAV_ROS::CreateSimulatedPlaneResponse_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::AU_UAV_ROS::CreateSimulatedPlaneResponse_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::AU_UAV_ROS::CreateSimulatedPlaneResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "416bfeb9353c15e349b0805ccac980c0";
  }

  static const char* value(const  ::AU_UAV_ROS::CreateSimulatedPlaneResponse_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x416bfeb9353c15e3ULL;
  static const uint64_t static_value2 = 0x49b0805ccac980c0ULL;
};

template<class ContainerAllocator>
struct DataType< ::AU_UAV_ROS::CreateSimulatedPlaneResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "AU_UAV_ROS/CreateSimulatedPlaneResponse";
  }

  static const char* value(const  ::AU_UAV_ROS::CreateSimulatedPlaneResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::AU_UAV_ROS::CreateSimulatedPlaneResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "int16 planeID\n\
\n\
\n\
";
  }

  static const char* value(const  ::AU_UAV_ROS::CreateSimulatedPlaneResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::AU_UAV_ROS::CreateSimulatedPlaneResponse_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::AU_UAV_ROS::CreateSimulatedPlaneRequest_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.startingLatitude);
    stream.next(m.startingLongitude);
    stream.next(m.startingAltitude);
    stream.next(m.startingBearing);
    stream.next(m.requestedID);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct CreateSimulatedPlaneRequest_
} // namespace serialization
} // namespace ros


namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::AU_UAV_ROS::CreateSimulatedPlaneResponse_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.planeID);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct CreateSimulatedPlaneResponse_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace service_traits
{
template<>
struct MD5Sum<AU_UAV_ROS::CreateSimulatedPlane> {
  static const char* value() 
  {
    return "f4229a3b0a6dc585aeb2c4ece67a1b3c";
  }

  static const char* value(const AU_UAV_ROS::CreateSimulatedPlane&) { return value(); } 
};

template<>
struct DataType<AU_UAV_ROS::CreateSimulatedPlane> {
  static const char* value() 
  {
    return "AU_UAV_ROS/CreateSimulatedPlane";
  }

  static const char* value(const AU_UAV_ROS::CreateSimulatedPlane&) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<AU_UAV_ROS::CreateSimulatedPlaneRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "f4229a3b0a6dc585aeb2c4ece67a1b3c";
  }

  static const char* value(const AU_UAV_ROS::CreateSimulatedPlaneRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<AU_UAV_ROS::CreateSimulatedPlaneRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "AU_UAV_ROS/CreateSimulatedPlane";
  }

  static const char* value(const AU_UAV_ROS::CreateSimulatedPlaneRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<AU_UAV_ROS::CreateSimulatedPlaneResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "f4229a3b0a6dc585aeb2c4ece67a1b3c";
  }

  static const char* value(const AU_UAV_ROS::CreateSimulatedPlaneResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<AU_UAV_ROS::CreateSimulatedPlaneResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "AU_UAV_ROS/CreateSimulatedPlane";
  }

  static const char* value(const AU_UAV_ROS::CreateSimulatedPlaneResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace service_traits
} // namespace ros

#endif // AU_UAV_ROS_SERVICE_CREATESIMULATEDPLANE_H

